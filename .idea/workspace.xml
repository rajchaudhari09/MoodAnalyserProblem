<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="5a0b78e0-c3e2-41fd-8c69-18ce4aab0ceb" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1afm8arm1JQCl1ofywWnddayOOt" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="compactDirectories" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.MoodAnalyzerTestClass">
    <configuration name="MoodAnalyzerTestClass" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;MoodAnalyzerTestClass&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="MoodAnalyzerTestClass.givenConstructorName_WhenImproper_ThenThrowMoodAnalysisException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;MoodAnalyzerTestClass.givenConstructorName_WhenImproper_ThenThrowMoodAnalysisException&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="MoodAnalyzerTestClass.givenHappyMessage_WhenImproperMethod_ShouldThrowMoodAnalysisException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;MoodAnalyzerTestClass.givenHappyMessage_WhenImproperMethod_ShouldThrowMoodAnalysisException&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="MoodAnalyzerTestClass.givenHappy_WhenProper_ThenReturnHappyMood" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;MoodAnalyzerTestClass.givenHappy_WhenProper_ThenReturnHappyMood&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <configuration name="MoodAnalyzerTestClass.givenSetHappyMessageWithReflector_ShouldReturnHAPPY" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--tests &quot;MoodAnalyzerTestClass.givenSetHappyMessageWithReflector_ShouldReturnHAPPY&quot;" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":cleanTest" />
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <GradleScriptDebugEnabled>false</GradleScriptDebugEnabled>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.MoodAnalyzerTestClass" />
        <item itemvalue="Gradle.MoodAnalyzerTestClass.givenSetHappyMessageWithReflector_ShouldReturnHAPPY" />
        <item itemvalue="Gradle.MoodAnalyzerTestClass.givenConstructorName_WhenImproper_ThenThrowMoodAnalysisException" />
        <item itemvalue="Gradle.MoodAnalyzerTestClass.givenHappyMessage_WhenImproperMethod_ShouldThrowMoodAnalysisException" />
        <item itemvalue="Gradle.MoodAnalyzerTestClass.givenHappy_WhenProper_ThenReturnHappyMood" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5a0b78e0-c3e2-41fd-8c69-18ce4aab0ceb" name="Default Changelist" comment="" />
      <created>1587134863607</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1587134863607</updated>
    </task>
    <servers />
  </component>
  <component name="WindowStateProjectService">
    <state x="662" y="247" width="655" height="626" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1587140996890">
      <screen x="70" y="34" width="1850" height="1046" />
    </state>
    <state x="662" y="247" width="655" height="626" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/70.34.1850.1046@70.34.1850.1046" timestamp="1587140996890" />
    <state width="1794" height="260" key="GridCell.Tab.0.bottom" timestamp="1587181023606">
      <screen x="70" y="34" width="1850" height="1046" />
    </state>
    <state width="1794" height="260" key="GridCell.Tab.0.bottom/70.34.1850.1046@70.34.1850.1046" timestamp="1587181023606" />
    <state width="1794" height="260" key="GridCell.Tab.0.center" timestamp="1587181023603">
      <screen x="70" y="34" width="1850" height="1046" />
    </state>
    <state width="1794" height="260" key="GridCell.Tab.0.center/70.34.1850.1046@70.34.1850.1046" timestamp="1587181023603" />
    <state width="1794" height="260" key="GridCell.Tab.0.left" timestamp="1587181023601">
      <screen x="70" y="34" width="1850" height="1046" />
    </state>
    <state width="1794" height="260" key="GridCell.Tab.0.left/70.34.1850.1046@70.34.1850.1046" timestamp="1587181023601" />
    <state width="1794" height="260" key="GridCell.Tab.0.right" timestamp="1587181023604">
      <screen x="70" y="34" width="1850" height="1046" />
    </state>
    <state width="1794" height="260" key="GridCell.Tab.0.right/70.34.1850.1046@70.34.1850.1046" timestamp="1587181023604" />
  </component>
</project>